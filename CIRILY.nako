# Contactless IC Reader In Language of Your's Library (a.k.a Wrapper)
# (あなたの言語による非接触ICリーダーライブラリ)
#
# やってること : なでしことFelicaLibのラッパー
# 通称: CIRILY Library (元ネタ:Proje●t DI●A Xのモジュール)
# 

# マクロ定義
POLLING_ANYとは整数
POLLING_ANY = $ffff
POLLING_EDYとは整数
POLLING_EDY = $fe00
POLLING_SUICAとは整数
POLLING_SUICA = $0003
POLLING_WAONとは整数
POLLING_WAON = $00fe
MAX_SYSTEM_CODE=8
SERVICE_SUICA_HISTORYとは整数
SERVICE_SUICA_HISTORY=$090f
SERVICE_NANACO_HISTORYとは整数
SERVICE_NANACO_HISTORY=$558b
SERVICE_EDY_HISTORYとは整数
SERVICE_EDY_HISTORY=$1317
SERVICE_WAON_CODEとは整数
SERVICE_WAON_CODE=$67cf
# マクロ定義終わり

# どうしても16→10進数変換で$が使えなかったから、五十六さんの「進数変換セット」を読み込み
●十進数(SをVで)

　　合計値とは数値。S=Sを文字列分解して配列逆順。変換後＝空。
　　変換前＝(「A」から「Z」まで文字コード範囲)を文字列分解。26回、変換後に「{回数+9}」を配列追加。
　　変換前で反復、S=Sの対象を変換後[回数-1]に置換。
　　Sで反復、合計値＝合計値＋(対象×(V^(回数-1)))。
　　合計値で戻る。
　　
●文字コード範囲(AからBまで)
　　結果とは配列。最初＝ASC(A)。最後＝ASC(B)。逆＝いいえ。
　　もし、最初＞最後なら、M＝最初。N＝最後。最初＝N。最後＝M。逆＝はい。
　　最初から最後まで繰り返す、結果にCHR(回数+最初-1)を配列追加。
　　もし、逆＝はいならば、結果を配列逆順。
　　結果を空で配列結合して戻る。
# 「進数変換セット」読み込み終わり

# DLLファイルとなでしこの命令をつなぎ合わせる接着剤
●pasori_open(dummy) =DLL("felicalib.dll","pasori* pasori_open (char* dummy)")
●pasori_close (p) =DLL("felicalib.dll","void* pasori_close (pasori *p)")
●pasori_init(p) =DLL("felicalib.dll","int* pasori_init (pasori* p)")
●felica_polling(p, systemcode, RFU, timeslot) =DLL("felicalib.dll","felica* felica_polling (pasori* p, uint16* systemcode, uint8* RFU, uint8* timeslot)")
●felica_free (p) =DLL("felicalib.dll","void* felica_free (felica *p)")
●felica_getidm (f,{参照渡し}buf) =DLL("felicalib.dll","void* felica_getidm (felica *f, uint8 *buf)")
●felica_getpmm (f,{参照渡し}buf) =DLL("felicalib.dll","void* felica_getpmm (felica *f, uint8 *buf)")
●felica_read_without_encryption02(f, servicecode, mode, addr,{参照渡し}data) =DLL("felicalib.dll","int* felica_read_without_encryption02 (felica *f, int *servicecode, int *mode, uint8 *addr, uint8 *data)")
# DLLファイルとなでしこの命令をつなぎ合わせる接着剤終わり

# 命令の日本語化
■ICカード
　・{文字列}PaSoRiハンドル
　・{文字列}Felicaハンドル
　・PaSoRiチェック〜
　　もし、PaSoRiハンドルが空ならば
　　　「PaSoRiハンドルが空です」でエラー発生
　・Felicaチェック〜
　　PaSoRiチェック
　　もし、Felicaハンドルが空ならば
　　　「Felicaハンドルが空です」でエラー発生
　・PaSoRi開く〜 
	pasori_open(H)
	PaSoRiハンドル=それ
　・PaSoRi閉じる〜
	PaSoRiチェック
	pasori_close(PaSoRiハンドル)
	PaSoRiハンドルは「」
　・PaSoRi初期化〜
　　PaSoRiチェック
	pasori_init(PaSoRiハンドル)
	もし、それが「-1」ならば
	　　「PaSoRiの初期化に失敗しました (初期化エラー)」でエラー発生
　・Felica取得(TYPEの)〜
	PaSoRiチェック
	felica_polling(PaSoRiハンドル, TYPE , 0, 0)
	もし、それが「0」ならば #カードが無い時に
		「Felicaの取得に失敗しました」でエラー発生
	Felicaハンドル=それ #カードがあればFelicaハンドルに代入する
　・Felica解放〜
	Felicaチェック
	felica_free(Felicaハンドル)
	Felicaハンドルは「」
　・Felica製造ID取得〜
	Felicaチェック
	BUFに8を確保
	felica_getidm (Felicaハンドル, BUF)
	BUFをバイナリダンプして「,」を「」へ正規表現置換
	それで戻る
　・Felica製造パラメータ取得〜
	Felicaチェック
	BUFに8を確保
	felica_getpmm (Felicaハンドル, BUF)
	BUFをバイナリダンプして「,」を「」へ正規表現置換
	それで戻る
　・Felica非暗号化塊読み込み(NUMのTYPEを)〜
	Felicaチェック
	dataに16を確保
	felica_read_without_encryption02(Felicaハンドル, TYPE, 0, NUM, data)
	もし、それが「-1」ならば
		「Felicaの非暗号化ブロックの読み込みに失敗しました」でエラー発生
		戻る
	dataをバイナリダンプして、それで戻る
  ・Suica残高読み込み(NUMの)〜
  　Felicaチェック
  　NUMのSERVICE_SUICA_HISTORYをFelica非暗号化塊読み込み
  　テスト＝それをCSV取得
	前半＝テストの10を表列取得
	後半＝テストの11を表列取得
	後半&前半を16で十進数
	それで戻る
	
